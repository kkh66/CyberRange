# Generated by Django 5.1.3 on 2024-12-01 13:47

import django.core.validators
import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('group', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('docker_name', models.CharField(max_length=255)),
                ('time_limit', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(1, message='The minimum time limit is 1 minute.')])),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', tinymce.models.HTMLField(help_text='Main scenario description')),
                ('objectives', tinymce.models.HTMLField(help_text='Learning objectives and outcomes')),
                ('prerequisites', tinymce.models.HTMLField(help_text='Required prerequisites')),
                ('objective_detail', tinymce.models.HTMLField(help_text='Detailed scenario objectives')),
                ('scenario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='scenario.scenario')),
            ],
        ),
        migrations.CreateModel(
            name='UserScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container_id', models.CharField(blank=True, max_length=100, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_scenarios', to=settings.AUTH_USER_MODEL)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scenario.scenario')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'scenario')},
            },
        ),
        migrations.CreateModel(
            name='ScenarioScreenshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='scenario_screenshots/%Y/%m/%d/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user_scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenshots', to='scenario.userscenario')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('mode', models.CharField(choices=[('singleplayer', 'Single Player'), ('multiplayer', 'Multi Player')], default='singleplayer', max_length=20)),
                ('tools', models.TextField(help_text='Required tools for this level')),
                ('recommended_time', models.IntegerField(help_text='Time in minutes')),
                ('description', tinymce.models.HTMLField(blank=True, help_text='Level-specific description and instructions', null=True)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='scenario.scenario')),
            ],
            options={
                'ordering': ['difficulty'],
                'unique_together': {('scenario', 'difficulty')},
            },
        ),
        migrations.CreateModel(
            name='GroupScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenarios', to='group.group')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='scenario.scenario')),
            ],
            options={
                'unique_together': {('group', 'scenario')},
            },
        ),
    ]
